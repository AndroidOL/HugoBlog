<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>牙刷刷的小站</title>
    <link>https://www.tianhao.me/</link>
    <description>Recent content on 牙刷刷的小站</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 12 Jul 2025 17:42:38 +0800</lastBuildDate>
    <atom:link href="https://www.tianhao.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NT创意图志：一张图说清核心资产，家庭用户的好帮手</title>
      <link>https://www.tianhao.me/posts/nt-assets-creative/</link>
      <pubDate>Sat, 12 Jul 2025 17:42:38 +0800</pubDate>
      <guid>https://www.tianhao.me/posts/nt-assets-creative/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;⚠️ &lt;strong&gt;免责声明&lt;/strong&gt;&lt;br&gt;&#xA;本页面所展示的所有图片均由 &lt;strong&gt;Google Gemini&lt;/strong&gt; 人工智能模型生成，基于用户输入的提示词自动合成，非人工拍摄或真实事件记录。图片内容仅用于视觉创意参考，&lt;strong&gt;不代表真实人物、地点、产品或事件&lt;/strong&gt;，亦不构成任何形式的建议或承诺。&lt;/p&gt;&#xA;&lt;p&gt;根据 &lt;a href=&#34;https://ai.google/disclaimers/gemini/&#34;&gt;Gemini 使用条款&lt;/a&gt; 及其 &lt;a href=&#34;https://support.google.com/gemini/answer/13881882&#34;&gt;内容政策&lt;/a&gt;，所生成图片的版权归 Google 所有或依据其授权生成，使用者需自行判断并遵守相关法律法规，&lt;strong&gt;不得用于违反版权、商标或肖像权的商业用途&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;若对生成内容有疑问或需移除，请通过页面下方方式与我们联系。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;2e4f9b81-3cde-4082-a8aa-12f6a5b79277.webp&#34; alt=&#34;2e4f9b81-3cde-4082-a8aa-12f6a5b79277&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;6f3a9f0c-7b26-4c0f-a79b-2e9f8f5e6fd0.webp&#34; alt=&#34;6f3a9f0c-7b26-4c0f-a79b-2e9f8f5e6fd0&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;938db72a-2b1c-4a2f-9e5f-45d3e2f6c70f.webp&#34; alt=&#34;938db72a-2b1c-4a2f-9e5f-45d3e2f6c70f&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;b051a6ee-c3a0-44d8-bb38-52e7d9b08ed9.webp&#34; alt=&#34;b051a6ee-c3a0-44d8-bb38-52e7d9b08ed9&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;cba2794c-6e0e-4382-973d-75b2d2f2c72a.webp&#34; alt=&#34;cba2794c-6e0e-4382-973d-75b2d2f2c72a&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;f1707f1a-31a7-49f5-9582-621c024a2fbe.webp&#34; alt=&#34;f1707f1a-31a7-49f5-9582-621c024a2fbe&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的智能小助手 3.0：打造一间全自动化的“时光放映室”</title>
      <link>https://www.tianhao.me/posts/rk-camera-capture-merge/</link>
      <pubDate>Sat, 12 Jul 2025 17:10:27 +0800</pubDate>
      <guid>https://www.tianhao.me/posts/rk-camera-capture-merge/</guid>
      <description>&lt;p&gt;欢迎回到我的“偷懒”摄影系统系列。在之前的篇章里，我们一起见证了一个普通摄像头如何被赋予“思考”的能力，以及如何为它建造一间优雅、便捷的“控制室”。然而，故事并未就此落幕。我们那个聪明的摄影师，每天都在聪明地“偷懒”，为我们精准地捕捉了海量、充满价值的瞬间。这些照片，如同一颗颗散落的珍珠，蕴含着时光的秘密，静静地躺在服务器的硬盘深处。&lt;/p&gt;&#xA;&lt;p&gt;是时候了，我们该把这些珍珠串联起来，让它们在光影的流动中，绽放出璀璨夺目的光芒。今天，我将向大家展示这个项目的最终章，也是我个人认为最激动人心的部分——打造一间全自动化的“时光放映室”。这个放映室的核心，是一个强大而可靠的Shell脚本。它是我整个系统的“幕后总导演”，肩负着神圣的使命：在每个寂静的黎明到来之前，将过去一天的万千照片，自动合成为一部部精彩纷呈的延时影片。&lt;/p&gt;&#xA;&lt;p&gt;项目代码：https://github.com/AndroidOL/camera-capture/tree/main/merge&lt;/p&gt;&#xA;&lt;h2 id=&#34;从素材堆积到影像诗篇最后的亿步&#34;&gt;从“素材堆积”到“影像诗篇”：最后的“亿”步&lt;/h2&gt;&#xA;&lt;p&gt;想象一下，如果没有这位自动化的“总导演”，我的生活将是怎样一番景象？那将意味着，每天，我都需要像一个数字时代的“矿工”，手动登录到远程服务器，在前一天产生的、可能多达几十GB的成千上万张照片中进行挖掘；然后，将这些“原矿”小心翼翼地下载到本地电脑；接着，再启动复杂的视频编辑软件，将这些照片一张张拖入时间线， painstaking 地设置帧率、编码器、码率……最后，在漫长的等待中，点击“渲染”按钮。&lt;/p&gt;&#xA;&lt;p&gt;这整个过程，不仅是一场与耐心和毅力搏斗的、毫无创造性可言的机械劳动，更可怕的是，它极易出错。万一哪天我忘了，或者因为工作繁忙而错过，那天的“影像日记”就会出现一个无法弥补的空白。这不是我想要的。&lt;/p&gt;&#xA;&lt;p&gt;我需要的是一个完全无人值守、极致稳定可靠、并且足够聪明的自动化流程。它应当是一位不知疲倦的艺术家，在每天固定的时间，比如万籁俱寂的凌晨，悄然启动，像一位技艺高超的电影剪辑师，将过去一天的零散素材，精心编排成一部完整的影片，然后优雅地将其安放于“家庭影片库”的数字货架上，静候我的检阅。&lt;/p&gt;&#xA;&lt;p&gt;于是，这个倾注了我大量心血的自动化脚本——&lt;code&gt;daily_photo_to_video.sh&lt;/code&gt; 应运而生。它远非一个简单的ffmpeg命令封装，而是一个拥有工业级健壮性的“智能生产线”。&lt;/p&gt;&#xA;&lt;h2 id=&#34;总导演的超凡技艺揭秘自动化脚本的核心设计&#34;&gt;“总导演”的超凡技艺：揭秘自动化脚本的核心设计&lt;/h2&gt;&#xA;&lt;p&gt;这个脚本的设计哲学，是**“追求极致的稳定与高效”**。我将它武装到了牙齿，让它能从容不迫地应对各种可以预见的、甚至难以预见的复杂状况。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-效率的极致榨干硬件的每一分潜力&#34;&gt;1. 效率的极致：榨干硬件的每一分潜力&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;高速公路 - Ramdisk (内存盘)&lt;/strong&gt;&lt;br&gt;&#xA;直接在传统硬盘上读取上万张零散的小图片，同时写入一个巨大的视频文件，磁盘I/O（读写）的瓶颈会立刻显现，整个过程将变得异常缓慢。我的解决方案堪称激进：在服务器宝贵的内存中，直接开辟出一块高速的虚拟硬盘（Ramdisk）。&lt;/p&gt;&#xA;&lt;p&gt;脚本启动后，会首先将所有待处理的照片，从拍照服务器通过网络高速同步到这块内存盘上。随后，视频合成（编码）的所有密集读写操作，也全部在这块虚拟硬盘内完成。内存的读写速度是普通硬盘的数十倍甚至上百倍，这无异于为数据的迁徙铺设了一条无视物理定律的、光速穿梭的“星际公路”，极大地缩短了处理时间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;专业引擎 - 硬件编码 (HEVC_RKMPP)&lt;/strong&gt;&lt;br&gt;&#xA;视频编码是典型的计算密集型任务，纯靠CPU来“硬算”，就像让一位全能但劳累的管家去做一件极其专业的木工活，不仅效率低下，还会让服务器的“心跳”（CPU占用率）飙升，风扇狂转。幸运的是，我所使用的服务器（基于Rockchip芯片）拥有专门的视频处理单元（VPU）。&lt;/p&gt;&#xA;&lt;p&gt;我的脚本会精准地调用ffmpeg，并指定使用&lt;code&gt;hevc_rkmpp&lt;/code&gt;这个硬件编码器。这相当于把专业的工作，交给了那位专门聘请的、技艺高超的“电影剪辑师”，让VPU来承担最繁重的编码任务，从而彻底解放了CPU。同时，我选择了高效的HEVC (H.265) 编码格式，它能在保持极高质量画面的同时，将视频体积压缩到传统H.264的一半左右，为我的“家庭影片库”节省了海量的宝贵空间。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-稳定性的基石工业级的容错与自愈&#34;&gt;2. 稳定性的基石：工业级的容错与自愈&lt;/h3&gt;&#xA;&lt;p&gt;在无人之境中独自航行的飞船，其价值不仅在于速度，更在于它应对宇宙风暴的生存能力。同样，一个需要常年无人值守的脚本，“逆商”至关重要。我为它构建了四重“安全协议”，来应对各种可能发生的意外。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;场景&lt;/th&gt;&#xA;          &lt;th&gt;脚本的智能应对策略&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;脚本意外中断&lt;/td&gt;&#xA;          &lt;td&gt;使用&lt;code&gt;trap&lt;/code&gt;清理机制，在中断时自动清理临时文件并卸载Ramdisk&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;同时运行冲突&lt;/td&gt;&#xA;          &lt;td&gt;使用&lt;code&gt;flock&lt;/code&gt;文件锁机制，避免多实例并发执行冲突&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;存储空间不足&lt;/td&gt;&#xA;          &lt;td&gt;提前检查目标路径剩余空间，避免写入中途失败&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;目标硬盘掉线&lt;/td&gt;&#xA;          &lt;td&gt;自动切换至备用存储路径，保障任务完成并暂停旧任务追赶&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;3-智慧的调度绝不错过任何一天的精彩&#34;&gt;3. 智慧的调度：绝不错过任何一天的精彩&lt;/h3&gt;&#xA;&lt;p&gt;我希望我的“放映室”里，每一天的影片都是完整的，如同一部连贯的编年史。因此，脚本最智能、最让我引以为傲的部分，在于它那近乎偏执的“补全”逻辑。&lt;/p&gt;&#xA;&lt;p&gt;脚本运行时会：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;回顾过去7天的日志，检查是否有影片缺失或失败；&lt;/li&gt;&#xA;&lt;li&gt;若发现遗漏，优先从最早的那天开始补；&lt;/li&gt;&#xA;&lt;li&gt;二次验证远程素材是否还在，确保不会空转；&lt;/li&gt;&#xA;&lt;li&gt;若全部完整，才处理“昨天”的新素材。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这样，系统就拥有了记忆与责任感，始终维持一份完整的“影像日记”。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一部家庭史诗的诞生&#34;&gt;一部“家庭史诗”的诞生&lt;/h2&gt;&#xA;&lt;p&gt;现在，这已经成为一种充满仪式感的日常。每天清晨，当我泡好咖啡，打开“家庭影片库”时，一部全新的、以昨天日期命名的延时影片已经静静地躺在那里了。&lt;/p&gt;&#xA;&lt;p&gt;它可能记录了窗外雷阵雨的全过程，也可能捕捉了我加班至深夜的身影，又或只是平淡地描绘阳光在家中流转的痕迹。&lt;/p&gt;&#xA;&lt;p&gt;这个自动化脚本，就像一个沉默而强大的心脏，为我整个智能摄影项目注入了源源不断的生命力。它将日复一日的、琐碎的视觉信息，升华为一部部浓缩了时间精华的影像诗篇，将冰冷的数据，提炼成了有温度的记忆，让我真正得以“看见”并“珍藏”那些无声流逝的时光。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创造的乐趣&#34;&gt;创造的乐趣&lt;/h2&gt;&#xA;&lt;p&gt;创造的乐趣，就在于此——用代码和逻辑，去构建一个能自动为我们创造、整理和呈现美好的系统。&lt;/p&gt;&#xA;&lt;p&gt;下一步，或许是训练一个AI，让它能自动为这些影片配上最契合的背景音乐，或者剪辑出“每周精华”了。&lt;/p&gt;&#xA;&lt;p&gt;这条通往“更好生活”的创造之路，永无止境，而这，也正是其魅力所在。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的智能小助手 2.0：给“偷懒”摄影系统开了扇全景落地窗</title>
      <link>https://www.tianhao.me/posts/rk-camera-capture-webui/</link>
      <pubDate>Sat, 12 Jul 2025 16:19:04 +0800</pubDate>
      <guid>https://www.tianhao.me/posts/rk-camera-capture-webui/</guid>
      <description>&lt;p&gt;距离上次分享我的“偷懒”摄影系统已经有段时间了，那个会自己判断何时该拍照、何时该“摸鱼”的小家伙，已经默默地为我工作了很久。但随着时间的推移，一个新的“痛点”开始浮现：尽管它内部很智能，但与它交流的方式却很“原始”。&lt;/p&gt;&#xA;&lt;p&gt;项目代码：https://github.com/AndroidOL/camera-capture/tree/main/web-ui&lt;/p&gt;&#xA;&lt;h2 id=&#34;从命令行考古到指尖轻触一次体验的革命&#34;&gt;从“命令行考古”到“指尖轻触”：一次体验的革命&lt;/h2&gt;&#xA;&lt;p&gt;在过去，每一次与它的互动，都像是一场深入服务器内部的“数字考古”之旅。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;想看看昨天拍到了什么？请启动 SSH 客户端，连接服务器，用 &lt;code&gt;cd&lt;/code&gt; 和 &lt;code&gt;ls&lt;/code&gt; 命令在迷宫般的目录结构里穿行。&lt;/li&gt;&#xA;&lt;li&gt;想调整拍摄的灵敏度参数？请用 Vim 或 Nano 修改配置文件，保存后再 &lt;code&gt;systemctl restart&lt;/code&gt;，祈祷没改错字符。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这种体验繁琐且充满距离感。我的智能助手，它的喜怒哀乐、它的工作成果，都被一层名为“命令行”的黑盒子包裹着。&lt;/p&gt;&#xA;&lt;p&gt;于是，我为它开了一扇窗：一扇能让我窝在沙发上，用最直观、最优雅方式与它交流的&lt;strong&gt;全景落地窗&lt;/strong&gt; —— 一个专属的&lt;strong&gt;网页控制台&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;现在，一切都不同了：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;打开浏览器，输入本地地址；&lt;/li&gt;&#xA;&lt;li&gt;一个美观、强大的界面展现在眼前；&lt;/li&gt;&#xA;&lt;li&gt;那个沉默的后台摄影师，拥有了鲜活的“面容”和灵巧的“双手”。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;它的组成&#34;&gt;它的组成：&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;眼睛&lt;/strong&gt;：实时监控窗口，无延迟。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;双手&lt;/strong&gt;：按钮菜单，一点即控。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;大脑&lt;/strong&gt;：复杂逻辑隐藏，美观又直观。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;网页控制台的四大超能力&#34;&gt;网页控制台的四大“超能力”&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-时光抽屉层级式的照片档案馆&#34;&gt;1. 时光抽屉：层级式的照片档案馆&lt;/h3&gt;&#xA;&lt;p&gt;灵感来自现实世界的“抽屉”。整个交互过程如同打开俄罗斯套娃般：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;年度 / 月度&lt;/strong&gt;：查看所有有记录的月份。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;具体日期&lt;/strong&gt;：以预览图展示每一天。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;小时抽屉&lt;/strong&gt;：点击后看到 24 小时分布。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分钟级照片&lt;/strong&gt;：深入找到具体照片。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;探索照片变得轻松、有趣、富有仪式感。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-实况视窗永不眨眼的忠诚守望者&#34;&gt;2. 实况视窗：永不眨眼的忠诚守望者&lt;/h3&gt;&#xA;&lt;p&gt;点击“实时监控”，系统立刻进入守望状态。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;心跳刷新&lt;/strong&gt;：前端每 2.5 秒请求一次画面，保持实时。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;智能重连&lt;/strong&gt;：摄像头掉线自动恢复。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;夜间模式&lt;/strong&gt;：环境变暗自动降亮，夜晚不刺眼。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-时光隧道私人定制的纪录片生成器&#34;&gt;3. 时光隧道：私人定制的纪录片生成器&lt;/h3&gt;&#xA;&lt;p&gt;“照片轮播”模式是我最爱的功能。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;选择任意日期范围（如“2025 樱花季”）；&lt;/li&gt;&#xA;&lt;li&gt;系统串联该时段所有照片，生成动态影片。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;特点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;幻灯片模式&lt;/strong&gt;：按时间顺序排列。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;过渡效果&lt;/strong&gt;：淡入淡出自然切换。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;时间字幕&lt;/strong&gt;：底部自动显示拍摄时间。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;🎞️ 我就用它回顾了樱花从花苞到飘落的全过程，感动与震撼并存。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-明眸善睐体贴入微的智能主题&#34;&gt;4. 明眸善睐：体贴入微的智能主题&lt;/h3&gt;&#xA;&lt;p&gt;我是夜猫子，因此加入了主题切换功能：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;日间模式&lt;/strong&gt;：蓝白配色，清爽。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;暗夜模式&lt;/strong&gt;：墨黑 + 绛红，护眼不扰人。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;自动记忆&lt;/strong&gt;：会记住你上次用的主题。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;就像一个懂你的老朋友。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的智能小助手：一个会“偷懒”的延时摄影系统</title>
      <link>https://www.tianhao.me/posts/rk-camera-capture/</link>
      <pubDate>Sat, 12 Jul 2025 15:38:51 +0800</pubDate>
      <guid>https://www.tianhao.me/posts/rk-camera-capture/</guid>
      <description>&lt;p&gt;生活中那些安静流淌、不易察觉的诗意总是令人充满好奇。迷上了延时摄影因为它能将漫长的时间压缩成迷人的瞬间，让我们得以用肉眼观察到那些缓慢发生的变化，这本身就像一种时间的魔法。&lt;/p&gt;&#xA;&lt;p&gt;于是，我翻出了家里那个在抽屉里沉睡了数年的 USB 摄像头，心中涌起一个温柔的念头：我想用它来记录，记录那些被我们匆忙忽略的、生活本身的呼吸。比如阳台上那盆多肉，如何在阳光的亲吻下，用我们看不见的速度悄悄舒展；窗外的云朵，又是如何被无形的手塑造成流动的雕塑；甚至是傍晚时分，夕阳如何在客厅的地板上，一寸寸地拉出长长的、温暖的影子……&lt;/p&gt;&#xA;&lt;p&gt;项目代码：https://github.com/AndroidOL/camera-capture&lt;/p&gt;&#xA;&lt;h2 id=&#34;从勤奋的笨蛋到聪明的懒汉一次理念的进化&#34;&gt;从“勤奋的笨蛋”到“聪明的懒汉”：一次理念的进化&lt;/h2&gt;&#xA;&lt;p&gt;最开始，我的想法和大多数人一样，简单而直接：写一个脚本，让摄像头化身为一个不知疲倦的“劳动模范”，每分钟准时打卡，忠实地拍下一张照片。当我敲下最后一行代码并成功运行的那一刻，心中充满了小小的成就感。然而，这份喜悦在第二天清晨，当我检视成果时，便迅速被一种混杂着困惑与失望的复杂情绪所取代。&lt;/p&gt;&#xA;&lt;p&gt;硬盘里，一千四百四十张照片整齐地排列着，它们是我的程序“勤奋”一整天的见证。但我快速滚动预览时，画面却像卡住了一样，静止得令人窒息。尤其是在那漫长的深夜时段，凌晨三点和三点零一分的客厅照片，别说茶几上的灰尘纹丝未动，就连空气本身，似乎都凝固在了那一刻。我忽然意识到，我创造的不是一个记录“变化”的工具，而是一个生产“重复”的工厂。&lt;/p&gt;&#xA;&lt;p&gt;当我冷静下来，把这笔“数字遗产”量化后，我才真正理解了问题的严重性：&lt;/p&gt;&#xA;&lt;h3 id=&#34;惊人的存储消耗&#34;&gt;惊人的存储消耗：&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;日产量&lt;/strong&gt;: 43200 张照片&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;月产量&lt;/strong&gt;: 约 1296000 张照片&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;年产量&lt;/strong&gt;: 超过 473040000 张照片&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;按每张照片分辨率 1920*1080 存储，每张照片占用大小 0.2MB 计算，每天将消耗近 8GB 的存储空间，对于家庭存储而言这并不算什么。但是对于嵌入式设备，ESP32 抑或是 RK 的单板机而言有点超出限制。&lt;/p&gt;&#xA;&lt;h3 id=&#34;毁灭性的后期工作&#34;&gt;毁灭性的后期工作：&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;素材筛选&lt;/strong&gt;: 为了剪辑出几分钟的精彩视频，需要在数十万张几乎相同的“废片”中大海捞针。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;时间成本&lt;/strong&gt;: 这哪里是艺术创作，分明是一场能耗尽所有热情的体力劳动。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;为了更直观地展示这两种思路的差异，我做了一个简单的对比：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;特性&lt;/th&gt;&#xA;          &lt;th&gt;“勤奋的笨蛋”模式&lt;/th&gt;&#xA;          &lt;th&gt;“聪明的懒汉”模式&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;工作原则&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;无差别、定时记录&lt;/td&gt;&#xA;          &lt;td&gt;智能判断、按需记录&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;每时照片数量&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;恒定 1800 张&lt;/td&gt;&#xA;          &lt;td&gt;几十到几百张不等，视变化而定&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;存储友好度&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;极低，呈线性爆炸增长&lt;/td&gt;&#xA;          &lt;td&gt;极高，只为有效信息付费&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;后期工作量&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;巨大，筛选过程极其痛苦&lt;/td&gt;&#xA;          &lt;td&gt;极小，几乎每张都是有效素材&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;最终成果质量&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;包含大量静止、无意义的“垃圾时间”&lt;/td&gt;&#xA;          &lt;td&gt;节奏紧凑，聚焦于“变化”的精华&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;显然，我需要的是后者。一个真正懂得“什么时候该出手，什么时候该摸鱼”的、充满智慧的——聪明的懒汉。&lt;/p&gt;&#xA;&lt;h2 id=&#34;给摄像头装上大脑懒惰是第一生产力&#34;&gt;给摄像头装上“大脑”：懒惰是第一生产力&lt;/h2&gt;&#xA;&lt;p&gt;于是，我决定对我的摄影系统进行一次彻底的、颠覆性的“智能化”升级。这次，我没有教它如何更努力地工作，恰恰相反，我教给了它一门艺术——如何合理地“偷懒”。&lt;/p&gt;&#xA;&lt;p&gt;它的核心工作原理，就像一位经验老道、洞察敏锐的情报官，他从不屑于上报那些“一切正常”的乏味报告，而只在“有情况”时才发出电报。&lt;/p&gt;&#xA;&lt;p&gt;为了让它具备这种高级的判断力，我为它设计了三步走的“智慧流程”：&lt;/p&gt;&#xA;&lt;h3 id=&#34;视觉的纯化看见本质而非表象&#34;&gt;视觉的纯化：看见本质，而非表象&lt;/h3&gt;&#xA;&lt;p&gt;清晨的冷光和傍晚的暖光，会给同一场景染上截然不同的色调，但物体本身可能纹丝未动。因此，系统在比较前，会先把彩色画面和存档照片都转换为只有黑白灰的“素描模式”（灰度化）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;变化的度量为不同赋予权重&#34;&gt;变化的度量：为“不同”赋予权重&lt;/h3&gt;&#xA;&lt;p&gt;系统将两张黑白照片进行像素级的叠加比对，生成“变化地图”，并计算其中亮色区域占比，得出变化率百分比，用于衡量“发生了什么”。&lt;/p&gt;&#xA;&lt;h3 id=&#34;决断的艺术设定一条智慧的偷懒基准&#34;&gt;决断的艺术：设定一条智慧的“偷懒”基准&lt;/h3&gt;&#xA;&lt;p&gt;我为它设定了一个阈值，例如 0.5%。低于此值则跳过拍摄，只有当变化显著时才记录，节省资源、聚焦重要。&lt;/p&gt;&#xA;&lt;h2 id=&#34;生活中的贴心管家一个高度自律的系统&#34;&gt;生活中的贴心管家：一个高度自律的系统&lt;/h2&gt;&#xA;&lt;p&gt;为了让它能 7x24 小时稳定运行，我设计了以下几套机制：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Next-Terminal：家庭内网安全访问解决方案</title>
      <link>https://www.tianhao.me/posts/nt-web-assets/</link>
      <pubDate>Fri, 11 Jul 2025 19:43:25 +0800</pubDate>
      <guid>https://www.tianhao.me/posts/nt-web-assets/</guid>
      <description>&lt;h1 id=&#34;家庭内网安全访问新方案next-terminal的技术实践与应用&#34;&gt;家庭内网安全访问新方案：Next-Terminal的技术实践与应用&lt;/h1&gt;&#xA;&lt;p&gt;在信息技术快速普及的今天，越来越多的家庭用户搭建起属于自己的服务器、小型 NAS 系统、家庭自动化控制中心等内部 IT 架构。与此同时，如何&lt;strong&gt;安全、高效、低成本&lt;/strong&gt;地从公网访问这些设备，成为一个亟需解决的问题。&lt;/p&gt;&#xA;&lt;p&gt;开源项目 &lt;a href=&#34;https://github.com/dushixiang/next-terminal&#34;&gt;Next-Terminal&lt;/a&gt;（简称 NT）为家庭用户提供了一个优雅的解决方案。它不仅开源、免费，而且资源占用极低（仅约 200MB），性能极高，可以轻松部署在阿里云、腾讯云、轻量云等公网节点上，承担所有流量入口，并将请求安全地转发至家庭内网中的各种服务，真正实现了&lt;strong&gt;安全代理与权限控制统一入口管理&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;一家庭网络公网暴露的安全隐患分析&#34;&gt;一、家庭网络公网暴露的安全隐患分析&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-常见家庭网络暴露方式&#34;&gt;1.1 常见家庭网络暴露方式&lt;/h3&gt;&#xA;&lt;p&gt;假设你在家中部署了一个网站或者 NAS 设备，并希望在外网访问，常见的做法是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;光猫直接进行端口映射&lt;/strong&gt;（公网 IP）；&lt;/li&gt;&#xA;&lt;li&gt;直接域名解析至家庭公网 IP（动态 DNS）；&lt;/li&gt;&#xA;&lt;li&gt;使用 IPv6 地址直连&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-潜在安全风险公网攻击风险高&#34;&gt;1.2 潜在安全风险，公网攻击风险高&lt;/h3&gt;&#xA;&lt;p&gt;无论你使用动态域名 + DDNS 还是公网 IPv6 地址，只要设备暴露在公网，就意味着：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;被黑客扫描的几率大幅增加；&lt;/li&gt;&#xA;&lt;li&gt;任何人只要知道你的 IP 地址就能尝试连接；&lt;/li&gt;&#xA;&lt;li&gt;一旦服务有漏洞（如老旧 NAS、PHP 漏洞），攻击者可能直接入侵内网。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在 IPv4 中，我们普遍使用 NAT（地址转换）将多个内网设备通过一个公网地址上网。但在 IPv6 中，&lt;strong&gt;每个设备都可以拥有公网地址&lt;/strong&gt;，虽然这有助于直连通信，却也带来新的隐患，例如：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;地址可预测性，攻击者可通过已知地址推测整个/60前缀范围；&lt;/li&gt;&#xA;&lt;li&gt;家中每台设备（如路由器、NAS、摄像头、智能电视）都有自己的 IPv6 地址；&lt;/li&gt;&#xA;&lt;li&gt;攻击者只需知道你服务器的一个 IPv6 地址，即可推测出整个网络前缀范围；&lt;/li&gt;&#xA;&lt;li&gt;由于 IPv6 地址空间虽大，但仍可&lt;strong&gt;进行特定范围段的端口扫描与暴力测试&lt;/strong&gt;；&lt;/li&gt;&#xA;&lt;li&gt;很多家庭设备的防火墙并未对 IPv6 有严格配置，一旦开放了某个端口，可能直接被访问。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;安全警示&lt;/strong&gt;：IPv6的全球可达性特性使家庭设备更容易被定位和攻击。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;二next-terminal-如何帮你解决以上问题&#34;&gt;二、Next-Terminal 如何帮你解决以上问题？&lt;/h2&gt;&#xA;&lt;p&gt;Next-Terminal 采用“统一入口代理+精细化权限控制”机制，主要特点包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;不再暴露内部端口到公网&lt;/strong&gt;；&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;只对可信入口开放端口&lt;/strong&gt;；&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;支持细粒度访问控制与登录认证&lt;/strong&gt;；&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;可审计、可管理、可授权访问你的服务&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph LR&#xA;    A[用户] --&amp;gt; B[NT 公网节点]&#xA;    B --&amp;gt; C[家庭网关]&#xA;    C --&amp;gt; D[内网服务]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;场景模拟将家庭内网网站安全暴露给公网&#34;&gt;场景模拟：将家庭内网网站安全暴露给公网&lt;/h3&gt;&#xA;&lt;p&gt;假设你家中部署了一个网站（如 &lt;code&gt;http://192.168.1.100:8080&lt;/code&gt;），你想在外面访问它，但又不希望任何人都能直接连接。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo 网站搭建入门</title>
      <link>https://www.tianhao.me/posts/hello/</link>
      <pubDate>Fri, 11 Jul 2025 15:25:51 +0800</pubDate>
      <guid>https://www.tianhao.me/posts/hello/</guid>
      <description>&lt;p&gt;本文详细讲解如何在 macOS 环境下，从零开始搭建 Hugo 静态网站，不依赖 Homebrew，包含 Git 主题添加、配置修改、内容创建等关键操作，帮助你快速搭建属于自己的高性能博客。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;一准备工作下载安装-hugo-与-git&#34;&gt;一、准备工作：下载安装 Hugo 与 Git&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-手动下载安装-hugo&#34;&gt;1.1 手动下载安装 Hugo&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;打开 &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;Hugo 官方 Releases 页面&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;下载对应 macOS 的扩展版（Extended），如：&#xA;&lt;code&gt;hugo_extended_0.148.0_darwin-universal.tar.gz&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在终端执行以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ~/Downloads&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxvf hugo_extended_0.148.0_darwin-universal.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mv hugo /usr/local/bin/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x /usr/local/bin/hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;验证安装：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;确认输出包含 &lt;code&gt;extended&lt;/code&gt; 字样。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;12-安装并确认-git&#34;&gt;1.2 安装并确认 Git&lt;/h3&gt;&#xA;&lt;p&gt;macOS 默认自带 Git，如果没有，可按提示安装 Xcode Command Line Tools：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确保能正常显示 Git 版本号。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;二创建-hugo-项目&#34;&gt;二、创建 Hugo 项目&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-创建新网站&#34;&gt;2.1 创建新网站&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site www-blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;其中 &lt;code&gt;www-blog&lt;/code&gt; 是新建的文件夹名称，可以随意取名，不影响博客标题或内容，只是项目根目录名称。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
